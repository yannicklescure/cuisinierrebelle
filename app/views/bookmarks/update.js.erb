root = document.querySelector("#root");

bookmark = `<svg style="font-size: 110%;" class="bi bi-bookmark mb-1" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" d="M8 12l5 3V3a2 2 0 00-2-2H5a2 2 0 00-2 2v12l5-3zm-4 1.234l4-2.4 4 2.4V3a1 1 0 00-1-1H5a1 1 0 00-1 1v10.234z" clip-rule="evenodd"/>
</svg>`;
bookmarkFill = `<svg style="font-size: 110%;" class="bi bi-bookmark-fill mb-1" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" d="M3 3a2 2 0 012-2h6a2 2 0 012 2v12l-5-3-5 3V3z" clip-rule="evenodd"/>
</svg>`;

if (root) {
  bookmarksCount = parseInt(root.dataset.bookmarksCount);
  // bookmarksCount = document.querySelector(`[data-bookmarks-count="${bookmarksCount}"`);
  card = document.querySelector("[data-recipe='<%= @recipe.id %>']");
  bookmarked = document.querySelector("[data-bookmark-recipe='<%= @recipe.id %>']");
  faBookmark = document.querySelector(".fa-bookmark-<%= @recipe.id %>");

  returnPosition = () => {
    let data = window.location.href.match(/https?:\/(?<domain>\/\w+.+:\d+|\/\w+.\w+.\w+)(?<lang>\/en|\/es|\/fr)?(?<controller>\/\w+)?(?<page>\/.+)?/);
    // console.log(data.groups.domain);
    let currentLang = data.groups.lang || null;
    if(currentLang != null) currentLang = currentLang.replace('/','');
    let currentController = data.groups.controller || null;
    if(currentController != null) currentController = currentController.replace('/','');
    let currentPage = data.groups.page || null;
    if(currentPage != null) currentPage = currentPage.replace('/','');
    return {
      currentLang: currentLang,
      currentController: currentController,
      currentPage: currentPage
    }
  }

  fade = (element) => {
    var op = 1;  // initial opacity
    var timer = setInterval(function () {
        if (op <= 0.1){
          clearInterval(timer);
          element.style.display = 'none';
        }
        element.style.opacity = op;
        element.style.filter = 'alpha(opacity=' + op * 100 + ")";
        op -= op * 0.1;
    }, 50);
    return true;
  }

  unfade = (element) => {
    var op = 0.1;  // initial opacity
    element.style.display = 'block';
    var timer = setInterval(function () {
        if (op >= 1){
            clearInterval(timer);
        }
        element.style.opacity = op;
        element.style.filter = 'alpha(opacity=' + op * 100 + ")";
        op += op * 0.1;
    }, 10);
    return true;
  }

  if(<%= @bookmarked %>) {
    bookmarksCount += 1;
    root.dataset.bookmarksCount = bookmarksCount;
    bookmarked.innerHTML = bookmarkFill;
    if(faBookmark != null) {
      faBookmark.classList.remove('d-none');
      unfade(faBookmark);
      setTimeout(() => {
        fade(faBookmark);
        setTimeout(() => {faBookmark.classList.add('d-none')}, 500);
      }, 500);
    }
  } else {
    bookmarksCount -= 1;
    root.dataset.bookmarksCount = bookmarksCount;
    bookmarked.innerHTML = bookmark;
    if(returnPosition().currentController === 'bookmarks') {
      card.parentElement.remove();
      if(bookmarksCount === 0) root.innerHTML = `<p class="mx-auto mt-5"><%= t('.no_bookmarks_html') %></p>`;
    }
  }
} else {
  bookmarked = document.querySelector("[data-bookmark-recipe='<%= @recipe.id %>']");
  if(<%= @bookmarked %>) {
    bookmarked.innerHTML = bookmarkFill;
  } else {
    bookmarked.innerHTML = bookmark;
  }
}
